-- striatey n
-- split te loop into n parts, then over n loops
-- play first 1/n of each n parts in the first loop
-- play second 1/n of each n parts in the second loop
-- etc
d1 $ striate 4 $ s "breaks125"

-- additional parameter to striate by - specifies what length of part is played
d1 $ striateBy 4 (1/3) $ s "breaks125"


-- slice n pat - n slices then pattern thm
d1 $ slice 6 "5 3*2 1 4 _ 0" $ s "breaks125" # legato 0.9

-- slice like splice but samples are stretched
d1 $ splice 6 "5 3*1.2 1 4/2.2 0" $ s "breaks125" # legato 1

d1 $ striate 4 $ sound "dork2"

-- smash n [a, b, c] : cut samples into n bits, then plays them back at speeds a b c
d1 $ smash' 3 [2, 3, 4] $ splice 6 "5 3*1.2 1 4/2.2 0" $ s "breaks125" # legato 1
d1 $ s "ho hc:2 ho:3"
hush


d1 $ smash 12 [2,3,4] $ s "bev*4"
hush
d1 $ smash' 12 [2,3,4] $ s "bev*4"

-- note about legato and cut - cut is kind of like an audio effect because
-- each orbit has it's own cut groups. events will the same cut group will
-- stop playing when an event with the same cut group is triggered
d1 $ sound "bev(3,8)" # cut "[1 2 3]*2"

-- legato kind of like cut but gives you some controllable overlap
-- and doesn't have groups?

d1 $ sound "bd*2 [[~ lt] sn:3] lt:1 [ht mt*2]"
hush
d1
  $ jux' [id,rev,(# speed 2)]
  $ every 2 ("<0.25 0.125 0.5>" <~)
  $ sound "bd*2 [[~ lt] sn:3] lt:1 [ht mt*2]"
  # squiz "<1 2.5 2>"
  # room (slow 4 $ range 0 0.2 saw)
  # sz 0.5

hush
d1 $ chunk 4 (|- note 5) $ jux rev $
  arp "<pinkyup down thumbup up>" $ n "<c'maj'4 e4'min'8 f4'maj'4>"
  # sound "supermandolin"
  # sustain 2 # room 0.3 # sz 0.9
hush
